name: Testing
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  poetry-lock:
    # Job to check poetry lock file is present, up-to-date with pyproject.toml,
    # and a valid resolution of the dependencies.
    runs-on: ubuntu-latest
    steps:
      # Setup steps
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pipx install poetry==1.8.4 --python "3.11"
      # Do checks
      - run: poetry check
      - run: poetry check --lock
      - name: Check dependencies can be resolved
        run: poetry lock --no-update
      - name: Check resolving dependencies did not change the lock file
        run: |
          echo "Checking if locking dependencies has created any diff in the lock file..."
          if 
            git diff --exit-code -- poetry.lock
          then
            echo "No changes to poetry.lock detected"
          else
            echo "Changes to poetry.lock detected!"
            echo "You probably should run 'poetry lock --no-update' and add the result to your PR"
            exit 1
          fi

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-python-and-dependencies
        with:
          python-version: "3.11"
      - run: poetry run poe format-check

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-python-and-dependencies
        with:
          python-version: "3.11"
      - run: poetry run poe lint

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-python-and-dependencies
        with:
          python-version: "3.11"
      - run: poetry run poe typecheck

  pytest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-python-and-dependencies
        with:
          python-version: ${{ matrix.python-version }}
      - run: poetry run poe test

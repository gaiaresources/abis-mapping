[tool.poetry]
name = "abis-mapping"
version = "4.3.0"
description = "Provides templates and mappings to translate tabular data to ABIS rdf"
authors = ["Gaia Resources <dev@gaiaresources.com.au>"]

[tool.poetry.dependencies]
python = "^3.11"
rdflib = "^7.1.1"
python-slugify = "^8.0.4"
frictionless = {extras = ["excel"], version = "^5.18.0"}
python-dateutil = "^2.9.0.post0"
shapely = "^2.0.6"
pyproj = "^3.7.0"
pydantic = "^2.9.2"
pydantic-settings = "^2.6.0"
numpy = "^2.1.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.3"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
mypy = "^1.13.0"
types-python-dateutil = "^2.9.0.20241003"
ruff = "^0.6.8"
pandas = "^2.2.3"
pyshacl = "^0.28.1"
jinja2 = "^3.1.4"
mkdocs-material = "^9.5.42"
mike = "^2.1.3"
poethepoet = "^0.29.0"
jsonschema-markdown = "^0.3.13"

[tool.poe.tasks]
lint = "ruff check"
lint-fix = "ruff check --fix-only"
format = "ruff format"
format-check = "ruff format --check"
typecheck = "mypy tests/ abis_mapping/ docs/"
generate-instructions = "./scripts/generate_instructions.sh"
generate-model-docs = "./scripts/generate_model_docs.sh"
test = "pytest tests --cov=abis_mapping --cov=docs --cov-report=term-missing"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
select = [
    # Default rules
    "E4", "E7", "E9", "F",
    # additional rules
    "B",  # bugbear
    "A",  # builtins
    "S",  # bandit
    "G",  # logging-format
    "RUF100", # unused suppressions
]

[tool.ruff.lint.per-file-ignores]
# Allow unused imports in __init__.py for re-exporting
"__init__.py" = ["F401"]
# Allow using assert in tests
"tests/*" = ["S101"]

[tool.ruff.lint.pydocstyle]
convention = "google"
